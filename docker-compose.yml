services:
  # Aplicaci칩n Django (usando Railway PostgreSQL)
  web:
    build: .  # Construye la imagen desde el Dockerfile local
    restart: always  # Reinicia autom치ticamente si falla
    ports:
      - "8000:8000"  # Mapea puerto 8000 del contenedor al puerto 8000 local
    environment:
      # Variables de entorno para el contenedor
      - DEBUG=${DEBUG:-1}  # Modo debug activado por defecto
      - DJANGO_SETTINGS_MODULE=nutricion_asistente.settings
      # Conexi칩n directa a Railway PostgreSQL (base de datos en la nube)
      - DATABASE_URL=postgresql://postgres:JyVlHYwbEzHjJcEdiMreERWdnDxIqvUZ@centerbeam.proxy.rlwy.net:16897/railway
      # API Key de Gemini AI (se lee desde archivo .env)
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    env_file:
      - .env  # Carga variables adicionales desde archivo .env
    volumes:
      # Monta el c칩digo local para desarrollo en tiempo real
      - .:/app
      # Volumen persistente para archivos media (fotos, documentos, etc.)
      - media_files:/app/media
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

volumes:
  media_files:

