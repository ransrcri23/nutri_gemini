services:
  # Aplicaci贸n Django (usando Railway PostgreSQL)
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Variables de entorno esenciales
      - DEBUG=${DEBUG:-1}
      - DJANGO_SETTINGS_MODULE=nutricion_asistente.settings
      - DATABASE_URL=postgresql://postgres:JyVlHYwbEzHjJcEdiMreERWdnDxIqvUZ@centerbeam.proxy.rlwy.net:16897/railway
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-AIzaSyBkPuWFRYgCQHf1nBEZnkqsIJ9pFvfMF6Q}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-ggksd)x66gzov)wmhcrtp9iio#(y119gg#jrdu%)i&cspg*ep-}
      - PYTHONPATH=/app
    env_file:
      - .env
    volumes:
      # Solo montar media en producci贸n, c贸digo se copia durante build
      - media_files:/app/media
      - static_files:/app/staticfiles
    command: >
      sh -c "echo 'Esperando conexi贸n a base de datos...' &&
             python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             echo 'Creando superusuario si no existe...' &&
             python manage.py shell -c \"from usuarios.models import Usuario; Usuario.objects.filter(email='admin@nutricion.com').exists() or Usuario.objects.create_superuser('admin', 'admin@nutricion.com', 'admin123', tipo_usuario='administrador')\" &&
             echo 'Iniciando servidor...' &&
             python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  media_files:
  static_files:

